apply plugin: 'scala'
apply plugin: 'idea'
apply plugin: 'eclipse'


repositories {
    mavenCentral ()
    maven {
        url 'http://repository.excilys.com/content/groups/public'
    }
}


dependencies {
    compile 'org.scala-lang:scala-library:2.11.7'
    testCompile 'io.gatling.highcharts:gatling-charts-highcharts:2.1.+'
}

sourceSets {
    test {
        resources {
            srcDir 'conf'
        }
    }
}

task gatling (dependsOn: 'compileTestScala') {

    logger.lifecycle (" ---- Executing all Gatling scenarios from: ${sourceSets.test.output.classesDir} ----")

    sourceSets.test.output.classesDir.eachFileRecurse { file ->
        if (file.isFile ()) {

            def gatlingScenarioClass = (file.getPath () - (sourceSets.test.output.classesDir.getPath () + File.separator) - '.class')
                    .replace (File.separator, '.')

            def absPath = System.getProperty("user.dir");

            // target/test-classes is required by gatling to be run
            def targetTestClassesFolder = new File (absPath, 'target/test-classes')
            targetTestClassesFolder.mkdirs()

            def targetReportsFolder = new File (project.buildDir.absolutePath, '/reports')
            targetReportsFolder.mkdirs()

            javaexec {
                main = 'io.gatling.app.Gatling'
                classpath = sourceSets.test.output + sourceSets.test.runtimeClasspath
                args '-sf', sourceSets.test.output.classesDir,
                        '-s', gatlingScenarioClass
            }

        }

    }

    logger.lifecycle (" ---- Done executing all Gatling scenarios ----")
}


task wrapper (type: Wrapper) {
    gradleVersion = '2.2'
}

